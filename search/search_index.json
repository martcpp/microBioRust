{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to microBioRust","text":"<p>A blazing-fast, sustainable bioinformatics toolkit written in Rust \u2014 for microbial genomics rresearch, and optimised for functions used in data exploration.  </p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83e\udd80 Built in Rust programming language for speed and safety</li> <li>\ud83d\udd04 Python bindings via pyo3 for InterOp - Rust meets Python</li> <li>\ud83d\udce6 Open source and community-driven</li> </ul>"},{"location":"#get-started","title":"Get Started!!","text":"<p>See Installation for details on how to install Rust for Linux, MacOSX and Windows Interested in microbiorust-py?  Check out the microbiorust-py section for quick-start &amp; more! </p> <p>Start a new project <code>cargo new microBioRust_test</code></p> <p>Add to your Cargo.toml <code>cargo add -p microBioRust</code></p> <p>to add the whole workspace including file parsing, sequence metrics, coming soon data viz (heatmap demonstration) and python bindings (microbiorust-py)</p> <p><code>cargo add -p seqmetrics</code> <code>cargo add -p heatmap</code> <code>cargo add -p microbiorust-py</code></p> <p>or clone the repo <code>git clone https://github.com/LCrossman/microBioRust.git</code></p> <p>Build the project <code>cargo build</code></p> <p>Run the tests <code>cargo test</code></p>"},{"location":"installation/","title":"Installation","text":"<p>How to Install</p> <p>Install Rust (recommended method):</p> <p>Please see here for base environment installation details for Rust programming language </p> <p>For MacOSX, Linux or other unix OS you can install Rust via:</p> <p><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh</code></p> <p>For further details on Windows please see: other install</p> <p>Install with Conda: Disclaimer: While conda is a powerful package manager, it is primarily designed for managing Python environments, and the  Rust package available may not always be up-to-date or include all the necessary components</p> <p><code>conda install conda-forge::rust</code></p> <p>Install with Python for Rust with Python InterOp To use Python Interoperability you will need to install Python and additionally you may need (even if in a conda environment):</p> <p>For Linux: <code>export LD_LIBRARY_PATH=[directory where python is located]</code> </p> <p>For MacOSX:  <code>export DYLD_LIBRARY_PATH=[directory where python is located]</code></p> <p>For Windows please see this StackOverflow issue for a fix: fix here</p>"},{"location":"windows_install/","title":"Installation on Windows","text":"<p>   Author: Sreeram Peela</p> <p>Pre-requisites</p> <p>Rust is the programming language of choice for complex tasks these days. Installing microBioRust in windows requires Rust to be installed and the PATH variables to be added.  </p> <p>We recommend installing Rust (and microBioRust) using Windows Powershell (logged as admin).  </p> <p>Alternately, the latest executables for GUI-based installation can be found here: https://www.rust-lang.org/tools/install</p> <ol> <li>Navigate to the directory of your choice and open Powershell in admin mode.</li> <li>Download Rust executable from Powershell using the command:  </li> </ol> <pre><code>Invoke-WebRequest\n-Uri https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe\n-OutFile rustup-init.exe\n# Run the below command to start installation\n.\\rustup-init.exe```\n\n</code></pre> <p> Installing Rust typically can be made through Visual Studio Community installer (Select option 1 when prompted). This documentation is written by selecting this option  </p> <p>Installation VS community installer requires downloading additional packages - Win11_SDK and .. Please note that both these require almost 6GB of memory !!  </p> <ol> <li>Select \u2018Default installation\u2019 when prompted.  </li> <li>After a typical installation is over, close the powershell and reopen it to make changes in the PATH.  </li> </ol> <p># Check if installation is successful </p> <pre><code>cargo help\n</code></pre> <p>For a successful installation, the above command will display different options and subcommands in Cargo. We will be using this for installing microBioRust (or any Rust package).</p> <p>Install microBioRust </p> <p>The microBioRust repo is being hosted on GitHub here. We recommend using Git for smooth installation. Alternatively, users can download the repo as a ZIP file, uncompress it (with your own choice of tools), and navigate to the directory.  </p> <p># Clone the repo using Git </p> <pre><code>git clone https://github.com/LCrossman/microBioRust.git  \n</code></pre> <p># Navigate to the dir </p> <pre><code>cd microBioRust\n</code></pre> <p>Inside the directory, one can use Cargo to build the library.  </p> <pre><code># Inside the project directory\ncargo build\n</code></pre> <p> The above command downloads and installs necessary dependencies for smooth functioning of the package. Please wait until all the required dependencies are installed and compilation for microBioRust is completed.  </p> <p>Once the package has been built, it is a general practise to test whether installation was successful.  For testing the installation, run the command:  </p> <pre><code># test installation of the package  \ncargo test\n</code></pre> <p>The above test instance runs over multiple files packed with the repo, and a final output message can help us in understanding errors. Typically, successful installation gives the following last few lines:  </p> <p></p> <p>Congratulations!! You have successfully installed microBioRust in your system. You can proceed with Getting started section of the documentation.  </p> <p>Session Information:  </p> <p> </p>"}]}